pipeline {
    agent any
    tools {
        jdk 'JDK11'
        maven 'MAVEN_HOME'
    }
    stages {
        stage('Checkout') {
            steps {
                // GitHub 저장소에서 소스 코드 체크아웃
                checkout scm
            }
        }
        stage('Build Application') {
            steps {
                dir('study') {
                    // Maven 빌드 시 테스트 스킵 옵션 추가
                    sh 'mvn clean package -DskipTests'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                dir('study') {
                    // Docker 이미지 빌드 (필요한 경우 --platform 옵션 포함)
                    sh "docker build -t jonneedev/study-0.0.1-snapshot.jar ."
                }
            }
        }
        // 기타 스테이지 추가 (예: 컨테이너 실행 등)
        stage('Cleanup Existing Containers') {
            steps {
                // 동일 이름의 기존 컨테이너가 있다면 삭제

                sh 'docker rm -f docker-test || true'
            }
        }
        stage('Run Spring Container') {
            steps {
                // 빌드한 이미지로 애플리케이션 컨테이너 실행
                sh 'docker run -d -p 8888:8888 --network jonnee-network --name docker-test  -e SERVER_PORT=8888  jonneedev/study-0.0.1-snapshot.jar'
            }
        }
    }
    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo 'Build and deployment succeeded!'
        }
        failure {
            echo 'Build or deployment failed.'
        }
    }
}
